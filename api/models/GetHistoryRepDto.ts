/* tslint:disable */
/* eslint-disable */
/**
 * Chaster
 * Chaster Public API  API documentation: [https://docs.chaster.app/api-introduction](https://docs.chaster.app/api-introduction) 
 *
 * The version of the OpenAPI document: 0.12.54
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ActionLogForPublic } from './ActionLogForPublic';
import {
    ActionLogForPublicFromJSON,
    ActionLogForPublicFromJSONTyped,
    ActionLogForPublicToJSON,
} from './ActionLogForPublic';

/**
 * 
 * @export
 * @interface GetHistoryRepDto
 */
export interface GetHistoryRepDto {
    /**
     * List of action logs
     * @type {Array<ActionLogForPublic>}
     * @memberof GetHistoryRepDto
     */
    results: Array<ActionLogForPublic>;
    /**
     * Number of total action logs
     * @type {number}
     * @memberof GetHistoryRepDto
     */
    count: number;
    /**
     * Has more results
     * @type {boolean}
     * @memberof GetHistoryRepDto
     */
    hasMore: boolean;
}

/**
 * Check if a given object implements the GetHistoryRepDto interface.
 */
export function instanceOfGetHistoryRepDto(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "results" in value;
    isInstance = isInstance && "count" in value;
    isInstance = isInstance && "hasMore" in value;

    return isInstance;
}

export function GetHistoryRepDtoFromJSON(json: any): GetHistoryRepDto {
    return GetHistoryRepDtoFromJSONTyped(json, false);
}

export function GetHistoryRepDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): GetHistoryRepDto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'results': ((json['results'] as Array<any>).map(ActionLogForPublicFromJSON)),
        'count': json['count'],
        'hasMore': json['hasMore'],
    };
}

export function GetHistoryRepDtoToJSON(value?: GetHistoryRepDto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'results': ((value.results as Array<any>).map(ActionLogForPublicToJSON)),
        'count': value.count,
        'hasMore': value.hasMore,
    };
}

