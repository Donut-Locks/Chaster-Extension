/* tslint:disable */
/* eslint-disable */
/**
 * Chaster
 * Chaster Public API  API documentation: [https://docs.chaster.app/api-introduction](https://docs.chaster.app/api-introduction) 
 *
 * The version of the OpenAPI document: 0.12.54
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ExtensionPartyForPublic
 */
export interface ExtensionPartyForPublic {
    /**
     * The extension slug. 
     * @type {string}
     * @memberof ExtensionPartyForPublic
     */
    slug: string;
    /**
     * The extension configuration. 
     * @type {object}
     * @memberof ExtensionPartyForPublic
     */
    config: object;
    /**
     * 
     * @type {string}
     * @memberof ExtensionPartyForPublic
     */
    id: string;
    /**
     * 
     * @type {string}
     * @memberof ExtensionPartyForPublic
     */
    displayName: string;
    /**
     * 
     * @type {string}
     * @memberof ExtensionPartyForPublic
     */
    summary: string;
    /**
     * 
     * @type {string}
     * @memberof ExtensionPartyForPublic
     */
    subtitle: string;
    /**
     * 
     * @type {string}
     * @memberof ExtensionPartyForPublic
     */
    icon: string;
    /**
     * 
     * @type {string}
     * @memberof ExtensionPartyForPublic
     */
    mode: ExtensionPartyForPublicModeEnum;
    /**
     * 
     * @type {number}
     * @memberof ExtensionPartyForPublic
     */
    regularity: number;
    /**
     * 
     * @type {object}
     * @memberof ExtensionPartyForPublic
     */
    userData: object;
    /**
     * 
     * @type {number}
     * @memberof ExtensionPartyForPublic
     */
    nbActionsRemaining: number;
    /**
     * 
     * @type {string}
     * @memberof ExtensionPartyForPublic
     */
    nextActionDate: string;
    /**
     * 
     * @type {boolean}
     * @memberof ExtensionPartyForPublic
     */
    isPartner: boolean;
    /**
     * 
     * @type {string}
     * @memberof ExtensionPartyForPublic
     */
    textConfig: string;
    /**
     * Created at
     * @type {string}
     * @memberof ExtensionPartyForPublic
     */
    createdAt: string;
    /**
     * Updated at
     * @type {string}
     * @memberof ExtensionPartyForPublic
     */
    updatedAt: string;
}


/**
 * @export
 */
export const ExtensionPartyForPublicModeEnum = {
    Cumulative: 'cumulative',
    NonCumulative: 'non_cumulative',
    Turn: 'turn',
    Unlimited: 'unlimited'
} as const;
export type ExtensionPartyForPublicModeEnum = typeof ExtensionPartyForPublicModeEnum[keyof typeof ExtensionPartyForPublicModeEnum];


/**
 * Check if a given object implements the ExtensionPartyForPublic interface.
 */
export function instanceOfExtensionPartyForPublic(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "slug" in value;
    isInstance = isInstance && "config" in value;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "displayName" in value;
    isInstance = isInstance && "summary" in value;
    isInstance = isInstance && "subtitle" in value;
    isInstance = isInstance && "icon" in value;
    isInstance = isInstance && "mode" in value;
    isInstance = isInstance && "regularity" in value;
    isInstance = isInstance && "userData" in value;
    isInstance = isInstance && "nbActionsRemaining" in value;
    isInstance = isInstance && "nextActionDate" in value;
    isInstance = isInstance && "isPartner" in value;
    isInstance = isInstance && "textConfig" in value;
    isInstance = isInstance && "createdAt" in value;
    isInstance = isInstance && "updatedAt" in value;

    return isInstance;
}

export function ExtensionPartyForPublicFromJSON(json: any): ExtensionPartyForPublic {
    return ExtensionPartyForPublicFromJSONTyped(json, false);
}

export function ExtensionPartyForPublicFromJSONTyped(json: any, ignoreDiscriminator: boolean): ExtensionPartyForPublic {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'slug': json['slug'],
        'config': json['config'],
        'id': json['_id'],
        'displayName': json['displayName'],
        'summary': json['summary'],
        'subtitle': json['subtitle'],
        'icon': json['icon'],
        'mode': json['mode'],
        'regularity': json['regularity'],
        'userData': json['userData'],
        'nbActionsRemaining': json['nbActionsRemaining'],
        'nextActionDate': json['nextActionDate'],
        'isPartner': json['isPartner'],
        'textConfig': json['textConfig'],
        'createdAt': json['createdAt'],
        'updatedAt': json['updatedAt'],
    };
}

export function ExtensionPartyForPublicToJSON(value?: ExtensionPartyForPublic | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'slug': value.slug,
        'config': value.config,
        '_id': value.id,
        'displayName': value.displayName,
        'summary': value.summary,
        'subtitle': value.subtitle,
        'icon': value.icon,
        'mode': value.mode,
        'regularity': value.regularity,
        'userData': value.userData,
        'nbActionsRemaining': value.nbActionsRemaining,
        'nextActionDate': value.nextActionDate,
        'isPartner': value.isPartner,
        'textConfig': value.textConfig,
        'createdAt': value.createdAt,
        'updatedAt': value.updatedAt,
    };
}

