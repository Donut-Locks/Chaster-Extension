/* tslint:disable */
/* eslint-disable */
/**
 * Chaster
 * Chaster Public API  API documentation: [https://docs.chaster.app/api-introduction](https://docs.chaster.app/api-introduction) 
 *
 * The version of the OpenAPI document: 0.12.54
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { PeerVerificationStatusEnum } from './PeerVerificationStatusEnum';
import {
    PeerVerificationStatusEnumFromJSON,
    PeerVerificationStatusEnumFromJSONTyped,
    PeerVerificationStatusEnumToJSON,
} from './PeerVerificationStatusEnum';

/**
 * Votes if the peer verification is enabled
 * @export
 * @interface VerificationPictureHistoryEntryVotes
 */
export interface VerificationPictureHistoryEntryVotes {
    /**
     * 
     * @type {PeerVerificationStatusEnum}
     * @memberof VerificationPictureHistoryEntryVotes
     */
    status: PeerVerificationStatusEnum;
    /**
     * Peer verification id
     * @type {string}
     * @memberof VerificationPictureHistoryEntryVotes
     */
    id: string;
    /**
     * Number of verified votes
     * @type {number}
     * @memberof VerificationPictureHistoryEntryVotes
     */
    verifiedVotes: number;
    /**
     * Number of rejected votes
     * @type {number}
     * @memberof VerificationPictureHistoryEntryVotes
     */
    rejectedVotes: number;
}

/**
 * Check if a given object implements the VerificationPictureHistoryEntryVotes interface.
 */
export function instanceOfVerificationPictureHistoryEntryVotes(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "status" in value;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "verifiedVotes" in value;
    isInstance = isInstance && "rejectedVotes" in value;

    return isInstance;
}

export function VerificationPictureHistoryEntryVotesFromJSON(json: any): VerificationPictureHistoryEntryVotes {
    return VerificationPictureHistoryEntryVotesFromJSONTyped(json, false);
}

export function VerificationPictureHistoryEntryVotesFromJSONTyped(json: any, ignoreDiscriminator: boolean): VerificationPictureHistoryEntryVotes {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'status': PeerVerificationStatusEnumFromJSON(json['status']),
        'id': json['_id'],
        'verifiedVotes': json['verifiedVotes'],
        'rejectedVotes': json['rejectedVotes'],
    };
}

export function VerificationPictureHistoryEntryVotesToJSON(value?: VerificationPictureHistoryEntryVotes | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'status': PeerVerificationStatusEnumToJSON(value.status),
        '_id': value.id,
        'verifiedVotes': value.verifiedVotes,
        'rejectedVotes': value.rejectedVotes,
    };
}

