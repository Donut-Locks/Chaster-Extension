/* tslint:disable */
/* eslint-disable */
/**
 * Chaster
 * Chaster Public API  API documentation: [https://docs.chaster.app/api-introduction](https://docs.chaster.app/api-introduction) 
 *
 * The version of the OpenAPI document: 0.12.54
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { LockForKeyholder } from './LockForKeyholder';
import {
    LockForKeyholderFromJSON,
    LockForKeyholderFromJSONTyped,
    LockForKeyholderToJSON,
} from './LockForKeyholder';

/**
 * 
 * @export
 * @interface KeyholderSearchLocksRepDto
 */
export interface KeyholderSearchLocksRepDto {
    /**
     * Number of pages
     * @type {number}
     * @memberof KeyholderSearchLocksRepDto
     */
    pages: number;
    /**
     * Number of results
     * @type {number}
     * @memberof KeyholderSearchLocksRepDto
     */
    total: number;
    /**
     * List of locks
     * @type {Array<LockForKeyholder>}
     * @memberof KeyholderSearchLocksRepDto
     */
    locks: Array<LockForKeyholder>;
}

/**
 * Check if a given object implements the KeyholderSearchLocksRepDto interface.
 */
export function instanceOfKeyholderSearchLocksRepDto(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "pages" in value;
    isInstance = isInstance && "total" in value;
    isInstance = isInstance && "locks" in value;

    return isInstance;
}

export function KeyholderSearchLocksRepDtoFromJSON(json: any): KeyholderSearchLocksRepDto {
    return KeyholderSearchLocksRepDtoFromJSONTyped(json, false);
}

export function KeyholderSearchLocksRepDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): KeyholderSearchLocksRepDto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'pages': json['pages'],
        'total': json['total'],
        'locks': ((json['locks'] as Array<any>).map(LockForKeyholderFromJSON)),
    };
}

export function KeyholderSearchLocksRepDtoToJSON(value?: KeyholderSearchLocksRepDto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'pages': value.pages,
        'total': value.total,
        'locks': ((value.locks as Array<any>).map(LockForKeyholderToJSON)),
    };
}

