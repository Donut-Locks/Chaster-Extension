/* tslint:disable */
/* eslint-disable */
/**
 * Chaster
 * Chaster Public API  API documentation: [https://docs.chaster.app/api-introduction](https://docs.chaster.app/api-introduction) 
 *
 * The version of the OpenAPI document: 0.12.54
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CommunityEventSettings
 */
export interface CommunityEventSettings {
    /**
     * Whether the community event is enabled
     * @type {boolean}
     * @memberof CommunityEventSettings
     */
    enabled: boolean;
    /**
     * The community event slug
     * @type {string}
     * @memberof CommunityEventSettings
     */
    slug: string;
    /**
     * The community event name
     * @type {string}
     * @memberof CommunityEventSettings
     */
    name: string;
    /**
     * The community event color
     * @type {string}
     * @memberof CommunityEventSettings
     */
    color: string;
    /**
     * The community event light color
     * @type {string}
     * @memberof CommunityEventSettings
     */
    lightColor: string;
    /**
     * The community event icon
     * @type {string}
     * @memberof CommunityEventSettings
     */
    icon: string;
}

/**
 * Check if a given object implements the CommunityEventSettings interface.
 */
export function instanceOfCommunityEventSettings(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "enabled" in value;
    isInstance = isInstance && "slug" in value;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "color" in value;
    isInstance = isInstance && "lightColor" in value;
    isInstance = isInstance && "icon" in value;

    return isInstance;
}

export function CommunityEventSettingsFromJSON(json: any): CommunityEventSettings {
    return CommunityEventSettingsFromJSONTyped(json, false);
}

export function CommunityEventSettingsFromJSONTyped(json: any, ignoreDiscriminator: boolean): CommunityEventSettings {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'enabled': json['enabled'],
        'slug': json['slug'],
        'name': json['name'],
        'color': json['color'],
        'lightColor': json['lightColor'],
        'icon': json['icon'],
    };
}

export function CommunityEventSettingsToJSON(value?: CommunityEventSettings | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'enabled': value.enabled,
        'slug': value.slug,
        'name': value.name,
        'color': value.color,
        'lightColor': value.lightColor,
        'icon': value.icon,
    };
}

