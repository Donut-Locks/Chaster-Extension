/* tslint:disable */
/* eslint-disable */
/**
 * Chaster
 * Chaster Public API  API documentation: [https://docs.chaster.app/api-introduction](https://docs.chaster.app/api-introduction) 
 *
 * The version of the OpenAPI document: 0.12.54
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface UserBadgeCount
 */
export interface UserBadgeCount {
    /**
     * Number of message requests
     * @type {number}
     * @memberof UserBadgeCount
     */
    pendingMessages: number;
    /**
     * Number of messages
     * @type {number}
     * @memberof UserBadgeCount
     */
    unreadMessages: number;
    /**
     * Number of keyholding requests
     * @type {number}
     * @memberof UserBadgeCount
     */
    keyholdingRequests: number;
}

/**
 * Check if a given object implements the UserBadgeCount interface.
 */
export function instanceOfUserBadgeCount(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "pendingMessages" in value;
    isInstance = isInstance && "unreadMessages" in value;
    isInstance = isInstance && "keyholdingRequests" in value;

    return isInstance;
}

export function UserBadgeCountFromJSON(json: any): UserBadgeCount {
    return UserBadgeCountFromJSONTyped(json, false);
}

export function UserBadgeCountFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserBadgeCount {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'pendingMessages': json['pendingMessages'],
        'unreadMessages': json['unreadMessages'],
        'keyholdingRequests': json['keyholdingRequests'],
    };
}

export function UserBadgeCountToJSON(value?: UserBadgeCount | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'pendingMessages': value.pendingMessages,
        'unreadMessages': value.unreadMessages,
        'keyholdingRequests': value.keyholdingRequests,
    };
}

