/* tslint:disable */
/* eslint-disable */
/**
 * Chaster
 * Chaster Public API  API documentation: [https://docs.chaster.app/api-introduction](https://docs.chaster.app/api-introduction) 
 *
 * The version of the OpenAPI document: 0.12.54
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { KeycloakGlobalConfig } from './KeycloakGlobalConfig';
import {
    KeycloakGlobalConfigFromJSON,
    KeycloakGlobalConfigFromJSONTyped,
    KeycloakGlobalConfigToJSON,
} from './KeycloakGlobalConfig';

/**
 * 
 * @export
 * @interface GlobalConfig
 */
export interface GlobalConfig {
    /**
     * 
     * @type {string}
     * @memberof GlobalConfig
     */
    apiUrl: string;
    /**
     * 
     * @type {KeycloakGlobalConfig}
     * @memberof GlobalConfig
     */
    keycloak: KeycloakGlobalConfig | null;
}

/**
 * Check if a given object implements the GlobalConfig interface.
 */
export function instanceOfGlobalConfig(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "apiUrl" in value;
    isInstance = isInstance && "keycloak" in value;

    return isInstance;
}

export function GlobalConfigFromJSON(json: any): GlobalConfig {
    return GlobalConfigFromJSONTyped(json, false);
}

export function GlobalConfigFromJSONTyped(json: any, ignoreDiscriminator: boolean): GlobalConfig {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'apiUrl': json['apiUrl'],
        'keycloak': KeycloakGlobalConfigFromJSON(json['keycloak']),
    };
}

export function GlobalConfigToJSON(value?: GlobalConfig | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'apiUrl': value.apiUrl,
        'keycloak': KeycloakGlobalConfigToJSON(value.keycloak),
    };
}

