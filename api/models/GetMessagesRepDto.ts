/* tslint:disable */
/* eslint-disable */
/**
 * Chaster
 * Chaster Public API  API documentation: [https://docs.chaster.app/api-introduction](https://docs.chaster.app/api-introduction) 
 *
 * The version of the OpenAPI document: 0.12.54
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { MessageForPublic } from './MessageForPublic';
import {
    MessageForPublicFromJSON,
    MessageForPublicFromJSONTyped,
    MessageForPublicToJSON,
} from './MessageForPublic';

/**
 * 
 * @export
 * @interface GetMessagesRepDto
 */
export interface GetMessagesRepDto {
    /**
     * List of messages
     * @type {Array<MessageForPublic>}
     * @memberof GetMessagesRepDto
     */
    results: Array<MessageForPublic>;
    /**
     * The number of results
     * @type {number}
     * @memberof GetMessagesRepDto
     */
    count: number;
    /**
     * Has more
     * @type {boolean}
     * @memberof GetMessagesRepDto
     */
    hasMore: boolean;
}

/**
 * Check if a given object implements the GetMessagesRepDto interface.
 */
export function instanceOfGetMessagesRepDto(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "results" in value;
    isInstance = isInstance && "count" in value;
    isInstance = isInstance && "hasMore" in value;

    return isInstance;
}

export function GetMessagesRepDtoFromJSON(json: any): GetMessagesRepDto {
    return GetMessagesRepDtoFromJSONTyped(json, false);
}

export function GetMessagesRepDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): GetMessagesRepDto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'results': ((json['results'] as Array<any>).map(MessageForPublicFromJSON)),
        'count': json['count'],
        'hasMore': json['hasMore'],
    };
}

export function GetMessagesRepDtoToJSON(value?: GetMessagesRepDto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'results': ((value.results as Array<any>).map(MessageForPublicToJSON)),
        'count': value.count,
        'hasMore': value.hasMore,
    };
}

