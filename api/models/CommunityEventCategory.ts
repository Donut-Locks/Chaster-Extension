/* tslint:disable */
/* eslint-disable */
/**
 * Chaster
 * Chaster Public API  API documentation: [https://docs.chaster.app/api-introduction](https://docs.chaster.app/api-introduction) 
 *
 * The version of the OpenAPI document: 0.12.54
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { CommunityEventAction } from './CommunityEventAction';
import {
    CommunityEventActionFromJSON,
    CommunityEventActionFromJSONTyped,
    CommunityEventActionToJSON,
} from './CommunityEventAction';

/**
 * 
 * @export
 * @interface CommunityEventCategory
 */
export interface CommunityEventCategory {
    /**
     * 
     * @type {string}
     * @memberof CommunityEventCategory
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof CommunityEventCategory
     */
    title: string;
    /**
     * 
     * @type {number}
     * @memberof CommunityEventCategory
     */
    maxPoints: number | null;
    /**
     * 
     * @type {Array<CommunityEventAction>}
     * @memberof CommunityEventCategory
     */
    actions: Array<CommunityEventAction>;
}

/**
 * Check if a given object implements the CommunityEventCategory interface.
 */
export function instanceOfCommunityEventCategory(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "title" in value;
    isInstance = isInstance && "maxPoints" in value;
    isInstance = isInstance && "actions" in value;

    return isInstance;
}

export function CommunityEventCategoryFromJSON(json: any): CommunityEventCategory {
    return CommunityEventCategoryFromJSONTyped(json, false);
}

export function CommunityEventCategoryFromJSONTyped(json: any, ignoreDiscriminator: boolean): CommunityEventCategory {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'name': json['name'],
        'title': json['title'],
        'maxPoints': json['maxPoints'],
        'actions': ((json['actions'] as Array<any>).map(CommunityEventActionFromJSON)),
    };
}

export function CommunityEventCategoryToJSON(value?: CommunityEventCategory | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'name': value.name,
        'title': value.title,
        'maxPoints': value.maxPoints,
        'actions': ((value.actions as Array<any>).map(CommunityEventActionToJSON)),
    };
}

