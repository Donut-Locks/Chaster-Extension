/* tslint:disable */
/* eslint-disable */
/**
 * Chaster
 * Chaster Public API  API documentation: [https://docs.chaster.app/api-introduction](https://docs.chaster.app/api-introduction) 
 *
 * The version of the OpenAPI document: 0.12.54
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { PublicLockForSearch } from './PublicLockForSearch';
import {
    PublicLockForSearchFromJSON,
    PublicLockForSearchFromJSONTyped,
    PublicLockForSearchToJSON,
} from './PublicLockForSearch';

/**
 * 
 * @export
 * @interface ExploreCategoryForPublic
 */
export interface ExploreCategoryForPublic {
    /**
     * 
     * @type {string}
     * @memberof ExploreCategoryForPublic
     */
    id: string;
    /**
     * 
     * @type {Array<PublicLockForSearch>}
     * @memberof ExploreCategoryForPublic
     */
    locks: Array<PublicLockForSearch>;
    /**
     * 
     * @type {string}
     * @memberof ExploreCategoryForPublic
     */
    description: string;
    /**
     * 
     * @type {boolean}
     * @memberof ExploreCategoryForPublic
     */
    featured: boolean;
    /**
     * 
     * @type {number}
     * @memberof ExploreCategoryForPublic
     */
    nbItems: number | null;
    /**
     * 
     * @type {number}
     * @memberof ExploreCategoryForPublic
     */
    order: number;
    /**
     * 
     * @type {string}
     * @memberof ExploreCategoryForPublic
     */
    title: string;
    /**
     * 
     * @type {string}
     * @memberof ExploreCategoryForPublic
     */
    type: string;
}

/**
 * Check if a given object implements the ExploreCategoryForPublic interface.
 */
export function instanceOfExploreCategoryForPublic(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "locks" in value;
    isInstance = isInstance && "description" in value;
    isInstance = isInstance && "featured" in value;
    isInstance = isInstance && "nbItems" in value;
    isInstance = isInstance && "order" in value;
    isInstance = isInstance && "title" in value;
    isInstance = isInstance && "type" in value;

    return isInstance;
}

export function ExploreCategoryForPublicFromJSON(json: any): ExploreCategoryForPublic {
    return ExploreCategoryForPublicFromJSONTyped(json, false);
}

export function ExploreCategoryForPublicFromJSONTyped(json: any, ignoreDiscriminator: boolean): ExploreCategoryForPublic {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['_id'],
        'locks': ((json['locks'] as Array<any>).map(PublicLockForSearchFromJSON)),
        'description': json['description'],
        'featured': json['featured'],
        'nbItems': json['nbItems'],
        'order': json['order'],
        'title': json['title'],
        'type': json['type'],
    };
}

export function ExploreCategoryForPublicToJSON(value?: ExploreCategoryForPublic | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        '_id': value.id,
        'locks': ((value.locks as Array<any>).map(PublicLockForSearchToJSON)),
        'description': value.description,
        'featured': value.featured,
        'nbItems': value.nbItems,
        'order': value.order,
        'title': value.title,
        'type': value.type,
    };
}

