/* tslint:disable */
/* eslint-disable */
/**
 * Chaster
 * Chaster Public API  API documentation: [https://docs.chaster.app/api-introduction](https://docs.chaster.app/api-introduction) 
 *
 * The version of the OpenAPI document: 0.12.54
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface VerificationPictureItem
 */
export interface VerificationPictureItem {
    /**
     * 
     * @type {string}
     * @memberof VerificationPictureItem
     */
    imageFile: string;
    /**
     * 
     * @type {string}
     * @memberof VerificationPictureItem
     */
    imageKey: string;
    /**
     * 
     * @type {Date}
     * @memberof VerificationPictureItem
     */
    submittedAt: Date;
    /**
     * 
     * @type {string}
     * @memberof VerificationPictureItem
     */
    verificationCode: string;
    /**
     * 
     * @type {string}
     * @memberof VerificationPictureItem
     */
    filename?: string;
    /**
     * 
     * @type {string}
     * @memberof VerificationPictureItem
     */
    peerVerificationId?: string;
}

/**
 * Check if a given object implements the VerificationPictureItem interface.
 */
export function instanceOfVerificationPictureItem(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "imageFile" in value;
    isInstance = isInstance && "imageKey" in value;
    isInstance = isInstance && "submittedAt" in value;
    isInstance = isInstance && "verificationCode" in value;

    return isInstance;
}

export function VerificationPictureItemFromJSON(json: any): VerificationPictureItem {
    return VerificationPictureItemFromJSONTyped(json, false);
}

export function VerificationPictureItemFromJSONTyped(json: any, ignoreDiscriminator: boolean): VerificationPictureItem {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'imageFile': json['imageFile'],
        'imageKey': json['imageKey'],
        'submittedAt': (new Date(json['submittedAt'])),
        'verificationCode': json['verificationCode'],
        'filename': !exists(json, 'filename') ? undefined : json['filename'],
        'peerVerificationId': !exists(json, 'peerVerificationId') ? undefined : json['peerVerificationId'],
    };
}

export function VerificationPictureItemToJSON(value?: VerificationPictureItem | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'imageFile': value.imageFile,
        'imageKey': value.imageKey,
        'submittedAt': (value.submittedAt.toISOString()),
        'verificationCode': value.verificationCode,
        'filename': value.filename,
        'peerVerificationId': value.peerVerificationId,
    };
}

