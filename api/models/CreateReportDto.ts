/* tslint:disable */
/* eslint-disable */
/**
 * Chaster
 * Chaster Public API  API documentation: [https://docs.chaster.app/api-introduction](https://docs.chaster.app/api-introduction) 
 *
 * The version of the OpenAPI document: 0.12.54
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { CreateReportDtoTarget } from './CreateReportDtoTarget';
import {
    CreateReportDtoTargetFromJSON,
    CreateReportDtoTargetFromJSONTyped,
    CreateReportDtoTargetToJSON,
} from './CreateReportDtoTarget';

/**
 * 
 * @export
 * @interface CreateReportDto
 */
export interface CreateReportDto {
    /**
     * 
     * @type {CreateReportDtoTarget}
     * @memberof CreateReportDto
     */
    target: CreateReportDtoTarget;
    /**
     * The reason of the report
     * @type {string}
     * @memberof CreateReportDto
     */
    reason: CreateReportDtoReasonEnum;
    /**
     * An optional message
     * @type {string}
     * @memberof CreateReportDto
     */
    message?: string;
}


/**
 * @export
 */
export const CreateReportDtoReasonEnum = {
    Harassment: 'harassment',
    SuicideSelfInjury: 'suicide_self_injury',
    InappropriateContent: 'inappropriate_content',
    HateSpeech: 'hate_speech',
    UnsolicitedContent: 'unsolicited_content',
    Other: 'other'
} as const;
export type CreateReportDtoReasonEnum = typeof CreateReportDtoReasonEnum[keyof typeof CreateReportDtoReasonEnum];


/**
 * Check if a given object implements the CreateReportDto interface.
 */
export function instanceOfCreateReportDto(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "target" in value;
    isInstance = isInstance && "reason" in value;

    return isInstance;
}

export function CreateReportDtoFromJSON(json: any): CreateReportDto {
    return CreateReportDtoFromJSONTyped(json, false);
}

export function CreateReportDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateReportDto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'target': CreateReportDtoTargetFromJSON(json['target']),
        'reason': json['reason'],
        'message': !exists(json, 'message') ? undefined : json['message'],
    };
}

export function CreateReportDtoToJSON(value?: CreateReportDto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'target': CreateReportDtoTargetToJSON(value.target),
        'reason': value.reason,
        'message': value.message,
    };
}

