/* tslint:disable */
/* eslint-disable */
/**
 * Chaster
 * Chaster Public API  API documentation: [https://docs.chaster.app/api-introduction](https://docs.chaster.app/api-introduction) 
 *
 * The version of the OpenAPI document: 0.12.54
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { KeyholderSearchLocksDtoCriteria } from './KeyholderSearchLocksDtoCriteria';
import {
    KeyholderSearchLocksDtoCriteriaFromJSON,
    KeyholderSearchLocksDtoCriteriaFromJSONTyped,
    KeyholderSearchLocksDtoCriteriaToJSON,
} from './KeyholderSearchLocksDtoCriteria';

/**
 * 
 * @export
 * @interface KeyholderSearchLocksDto
 */
export interface KeyholderSearchLocksDto {
    /**
     * 
     * @type {KeyholderSearchLocksDtoCriteria}
     * @memberof KeyholderSearchLocksDto
     */
    criteria?: KeyholderSearchLocksDtoCriteria;
    /**
     * Filter by lock status
     * @type {string}
     * @memberof KeyholderSearchLocksDto
     */
    status?: KeyholderSearchLocksDtoStatusEnum;
    /**
     * Search by username of shared lock name
Min. 2 characters
     * @type {string}
     * @memberof KeyholderSearchLocksDto
     */
    search?: string;
    /**
     * Page number (starts with 0)
     * @type {number}
     * @memberof KeyholderSearchLocksDto
     */
    page?: number;
    /**
     * Number of items returned
     * @type {number}
     * @memberof KeyholderSearchLocksDto
     */
    limit?: number;
}


/**
 * @export
 */
export const KeyholderSearchLocksDtoStatusEnum = {
    Locked: 'locked',
    Unlocked: 'unlocked',
    Deserted: 'deserted',
    Archived: 'archived'
} as const;
export type KeyholderSearchLocksDtoStatusEnum = typeof KeyholderSearchLocksDtoStatusEnum[keyof typeof KeyholderSearchLocksDtoStatusEnum];


/**
 * Check if a given object implements the KeyholderSearchLocksDto interface.
 */
export function instanceOfKeyholderSearchLocksDto(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function KeyholderSearchLocksDtoFromJSON(json: any): KeyholderSearchLocksDto {
    return KeyholderSearchLocksDtoFromJSONTyped(json, false);
}

export function KeyholderSearchLocksDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): KeyholderSearchLocksDto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'criteria': !exists(json, 'criteria') ? undefined : KeyholderSearchLocksDtoCriteriaFromJSON(json['criteria']),
        'status': !exists(json, 'status') ? undefined : json['status'],
        'search': !exists(json, 'search') ? undefined : json['search'],
        'page': !exists(json, 'page') ? undefined : json['page'],
        'limit': !exists(json, 'limit') ? undefined : json['limit'],
    };
}

export function KeyholderSearchLocksDtoToJSON(value?: KeyholderSearchLocksDto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'criteria': KeyholderSearchLocksDtoCriteriaToJSON(value.criteria),
        'status': value.status,
        'search': value.search,
        'page': value.page,
        'limit': value.limit,
    };
}

