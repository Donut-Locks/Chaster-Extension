/* tslint:disable */
/* eslint-disable */
/**
 * Chaster
 * Chaster Public API  API documentation: [https://docs.chaster.app/api-introduction](https://docs.chaster.app/api-introduction) 
 *
 * The version of the OpenAPI document: 0.12.54
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface GetUserAchievementsResponseDto
 */
export interface GetUserAchievementsResponseDto {
    /**
     * 
     * @type {string}
     * @memberof GetUserAchievementsResponseDto
     */
    slug: string;
    /**
     * 
     * @type {boolean}
     * @memberof GetUserAchievementsResponseDto
     */
    granted: boolean;
    /**
     * 
     * @type {number}
     * @memberof GetUserAchievementsResponseDto
     */
    progress: number | null;
    /**
     * 
     * @type {number}
     * @memberof GetUserAchievementsResponseDto
     */
    total: number | null;
    /**
     * 
     * @type {string}
     * @memberof GetUserAchievementsResponseDto
     */
    grantedAt: string | null;
    /**
     * 
     * @type {string}
     * @memberof GetUserAchievementsResponseDto
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof GetUserAchievementsResponseDto
     */
    description: string;
    /**
     * 
     * @type {string}
     * @memberof GetUserAchievementsResponseDto
     */
    category: string;
    /**
     * 
     * @type {boolean}
     * @memberof GetUserAchievementsResponseDto
     */
    progressEnabled: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof GetUserAchievementsResponseDto
     */
    hideIfNotGranted: boolean;
}

/**
 * Check if a given object implements the GetUserAchievementsResponseDto interface.
 */
export function instanceOfGetUserAchievementsResponseDto(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "slug" in value;
    isInstance = isInstance && "granted" in value;
    isInstance = isInstance && "progress" in value;
    isInstance = isInstance && "total" in value;
    isInstance = isInstance && "grantedAt" in value;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "description" in value;
    isInstance = isInstance && "category" in value;
    isInstance = isInstance && "progressEnabled" in value;
    isInstance = isInstance && "hideIfNotGranted" in value;

    return isInstance;
}

export function GetUserAchievementsResponseDtoFromJSON(json: any): GetUserAchievementsResponseDto {
    return GetUserAchievementsResponseDtoFromJSONTyped(json, false);
}

export function GetUserAchievementsResponseDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): GetUserAchievementsResponseDto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'slug': json['slug'],
        'granted': json['granted'],
        'progress': json['progress'],
        'total': json['total'],
        'grantedAt': json['grantedAt'],
        'name': json['name'],
        'description': json['description'],
        'category': json['category'],
        'progressEnabled': json['progressEnabled'],
        'hideIfNotGranted': json['hideIfNotGranted'],
    };
}

export function GetUserAchievementsResponseDtoToJSON(value?: GetUserAchievementsResponseDto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'slug': value.slug,
        'granted': value.granted,
        'progress': value.progress,
        'total': value.total,
        'grantedAt': value.grantedAt,
        'name': value.name,
        'description': value.description,
        'category': value.category,
        'progressEnabled': value.progressEnabled,
        'hideIfNotGranted': value.hideIfNotGranted,
    };
}

